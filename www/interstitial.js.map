{"version":3,"file":"interstitial.js","sourceRoot":"","sources":["../scripts/interstitial.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;AAEH,mCAA8B;AAG9B,MAAa,YAAa,SAAQ,WAAG;IACnC;QACE,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAA;IACxC,CAAC;IAED,EAAE,CAAC,SAA+B,EAAE,OAAmB;QACrD,KAAK,CAAC,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;IAC/B,CAAC;IAEK,MAAM,CAAC,OAA8B;;;;;YACzC,OAA8B,OAAM,MAAM,YAAC,OAAO,CAAC,CAAC;QACtD,CAAC;KAAA;IAGD,MAAM,CAAC,OAAgB;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA;IACrC,CAAC;IACD,IAAI;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;IAC1B,CAAC;IACD,OAAO;QACL,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;IAC7B,CAAC;IACD,QAAQ;QACN,OAAO,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA;IAC9B,CAAC;IACD,SAAS;QACP,OAAO,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;IAC/B,CAAC;CAEF;AA9BD,oCA8BC","sourcesContent":["/**\r\n * Copyright 2020 Huawei Technologies Co., Ltd.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport { Ads } from './utils';\r\nimport { InterstitialAdEvents, InterstitialAdOptions, AdParam, IsLoadedResult, IsLoadingResult } from './interfaces';\r\n\r\nexport class Interstitial extends Ads {\r\n  constructor() {\r\n    super(Interstitial.name.toLowerCase())\r\n  }\r\n\r\n  on(eventName: InterstitialAdEvents, handler: () => void): void {\r\n    super.on(eventName, handler);\r\n  }\r\n\r\n  async create(options: InterstitialAdOptions): Promise<Interstitial> {\r\n    return <Promise<Interstitial>>super.create(options);\r\n  }\r\n\r\n\r\n  loadAd(adParam: AdParam): Promise<void> {\r\n    return this.call('loadAd', adParam)\r\n  }\r\n  show(): Promise<void> {\r\n    return this.call('show')\r\n  }\r\n  destroy(): Promise<void> {\r\n    return this.call('destroy')\r\n  }\r\n  isLoaded(): Promise<IsLoadedResult> {\r\n    return this.call('isLoaded')\r\n  }\r\n  isLoading(): Promise<IsLoadingResult> {\r\n    return this.call('isLoading')\r\n  }\r\n\r\n}\r\n\r\n"]}